/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState; // Should be ok
}

gradSchemes
{
    // default         Gauss linear;
    // If you get residual "bumpiness" or instability near sharp curvature or boundaries, you can experiment with:
    default         cellLimited Gauss linear 1
    // grad(p)         faceMDLimited Gauss linear 1; // Fixes checkerboarding 
    // https://www.openfoam.com/documentation/guides/v2112/api/classFoam_1_1fv_1_1faceMDLimitedGrad.html
    // grad(U)         Gauss linear;
}

divSchemes
{
    default         none;   // OK

    div(phi,U)      bounded Gauss LUST grad(U); // Stable, higher-order

    turbulence      bounded Gauss limitedLinear 1; // OK
    div(phi,k)      $turbulence;
    div(phi,epsilon) $turbulence;
    div(phi,omega)  $turbulence;

    div((nuEff*dev2(T(grad(U))))) Gauss linear; // OK
}

laplacianSchemes
{
    default         Gauss linear corrected; // Handles mesh non-orthogonality
}

interpolationSchemes
{
    default         linear;
    // default         limitedLinear 1;         // Smoother transitions, more stable
}

snGradSchemes
{
    default         corrected; // OK
}

wallDist
{
    method          meshWave; // OK
}


// ************************************************************************* //
