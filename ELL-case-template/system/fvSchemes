/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState; // Should be ok
}

gradSchemes
{
    // If you get residual "bumpiness" or instability near sharp curvature or boundaries, you can experiment with:
    default         cellMDLimited Gauss linear 0;       // Gradient limiter (not too diffusive)
    grad(U)         cellMDLimited Gauss linear 0.333;   // slope limiter  
    grad(p)         Gauss linear 0.333;                 // WolfDynamics reccommendation
    // PotentialFoam
    grad(phi)      Gauss linear;
}

divSchemes
{
    // Accurate but oscillatory scheme, second-order accurate
    div(phi,U)                      Gauss linear; 
    div(phi,k)                      Gauss limitedLinear 1;
    div(phi,omega)                  Gauss limitedLinear 1;
    div((nuEff*dev2(T(grad(U)))))   Gauss linear; 
    // PotentialFoam
    div(div(phi,U)) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear limited 1.0; // Accurate on orthogonal meshes (<70 deg)  w/ non-orthogonal correction
}

snGradSchemes
{
    default         limited 1.0;      // Accurate on orthogonal meshes (<70 deg)  w/ non-orthogonal correction
}

interpolationSchemes
{
    default         linear;
    // default         limitedLinear 1; // Smoother transitions, more stable
}

wallDist
{
    method          meshWave; // OK
}


// ************************************************************************* //
