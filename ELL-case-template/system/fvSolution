/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// https://www.wolfdynamics.com/wiki/tipsandtricks.pdf

solvers
{
    p
    {
        solver          GAMG;
        smoother        GaussSeidel;
        tolerance       1e-6;
        relTol          0.05;
        minIter         3;
        maxIter         100;
    }

    U
    {
        type            coupled;
        solver          PBiCCCG;
        preconditioner  DILU;
        smoother        symGaussSeidel;
        tolerance       (1e-8 1e-8 1e-8);
        relTol          (0.0 0.0 0.0);
        minIter         3;
        maxIter         100;
    }
    
    k
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.05;
        minIter         3;
        maxIter         100;
    }

    omega
    {
        solver          smoothSolver;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.05;
        minIter         3;
        maxIter         100;
    }
    
    // PotentialFoam
    Phi
    {
        solver          GAMG;
        smoother        GaussSeidel;
        tolerance       1e-8;
        relTol          0.05;
        minIter         3;
    }
}

SIMPLE
{
    momentumPredictor           yes; // yes for high Re flows where convection dominates
    nOuterCorrectors            1;   // ?? improves stability of second order time discretization schemes
    nCorrector                  3;   // improves accuracy and stabilty
    nNonOrthogonalCorrectors    1;   // 1 for meshes with non-orthogonality < 60 deg
    consistent                  yes; // to use SIMPLEC

    residualControl
    {
        p               1e-4;
        U               1e-6;
        "(k|omega)"     1e-6;
        Phi             1e-6;
    }
}

relaxationFactors
{
    equations
    {
        // Industry standard for SIMPLE
        p               0.3;
        U               0.7;
        k               0.7;
        omega           0.7;
        Phi             0.7; // PotentialFoam
    }
}

potentialFlow
{
    nNonOrthogonalCorrectors 5;
}


// ************************************************************************* //
