/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2406                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      meshDict;
}

// Surface mesh definition
surfaceFile "constant/triSurface/ribbon.stl";  // STL filename

// Meshing parameters
maxCellSize 0.5;          // Maximum cell size for the entire mesh
minCellSize 0.5;          // Minimum cell size for the entire mesh

// surfaceMesh2D yes; // Generate 2D surface mesh


localRefinement
{
    // Specify the regions for local refinement

    wall_bellmouth
    {
        // additional refinement levels
        AdditionalRefinementLevels 3; // Number of additional refinement levels
        cellSize 0.001; // Cell size for this region
        refinementThickness 0.01; // Thickness of the refinement region
    }

    outlet
    {
        // additional refinement levels
        AdditionalRefinementLevels 3; // Number of additional refinement levels
        cellSize 0.001; // Cell size for this region
        refinementThickness 0.002; // Thickness of the refinement region
    }

}

// Object refinement settings
objectRefinements
{
    box1
    {
        // Specify the box for refinement
        type box; // Type of object (box, sphere, etc.)
        cellSize 0.2; // Cell size for this region
        centre (25 0 0.05); // Centre of the box
        lengthX 25; // Length in X direction
        lengthY 25; // Length in Y direction
        lengthZ 0.1; // Length in Z direction
    }

    box2
    {
        // Specify the box for refinement
        type box; // Type of object (box, sphere, etc.)
        cellSize 0.1; // Cell size for this region
        centre (25 0 0.05); // Centre of the box
        lengthX 20; // Length in X direction
        lengthY 20; // Length in Y direction
        lengthZ 0.1; // Length in Z direction
    }

    box3
    {
        // Specify the box for refinement
        type box; // Type of object (box, sphere, etc.)
        cellSize 0.05; // Cell size for this region
        centre (25 0 0.05); // Centre of the box
        lengthX 15; // Length in X direction
        lengthY 15; // Length in Y direction
        lengthZ 0.1; // Length in Z direction
    }

    boxBellmouth
    {
        // Specify the box for refinement
        type box; // Type of object (box, sphere, etc.)
        cellSize 0.01; // Cell size for this region
        centre (25 0 0.05); // Centre of the box
        lengthX 10; // Length in X direction
        lengthY 10; // Length in Y direction
        lengthZ 0.1; // Length in Z direction
    }

}

// Boundary layer settings (optional)
boundaryLayers
{
    patchBoundaryLayers
    {
        "wall_bellmouth"
        {
            // nLayers 30; // Number of layers
            // thicknessRatio 1.05; // Thickness of each layer
            // firstLayerThickness 0.000020; // Thickness of the first layer

            nLayers 5; // Number of layers
            thicknessRatio 1.2; // Thickness of each layer
            firstLayerThickness 5e-5; // Thickness of the first layer
        }

    }
}

// keepCellsIntersectingBoundary 1; // Keep cells that intersect with the boundary
// checkForGluedMesh 1; // Check for glued mesh


// Rename the boundary patches
renameBoundary
{
    defaultType patch; // Default type for all patches
    newPatchNames
    {
        inlet
        {
            type patch;
            newName inlet; // New name for the patch
        }

        outlet
        {
            type patch;
            newName outlet; // New name for the patch
        }

        wall_bellmouth
        {
            type wall;
            newName wall_bellmouth; // New name for the patch
        }
        symmetry_bottom
        {
            type symmetryPlane;
            newName symmetry_bottom; // New name for the patch
        }
        topEmptyFaces
        {
            type empty;
            newName topEmptyFaces; // New name for the patch
        }
        bottomEmptyFaces
        {
            type empty;
            newName bottomEmptyFaces; // New name for the patch
        }
    }
    
}

// ************************************************************************* //